{"version":3,"sources":["common/goBack/style.js","common/goBack/index.js","../node_modules/@ant-design/icons-svg/es/asn/ArrowLeftOutlined.js","../node_modules/@ant-design/icons/es/icons/ArrowLeftOutlined.js","views/detail/style.js","views/detail/index.js"],"names":["GoWraper","styled","div","GoBack","props","title","Backfn","ArrowLeftOutlined","onClick","defaultProps","window","history","back","ref","React","AntdIcon","Object","assign","icon","ArrowLeftOutlinedSvg","displayName","Wraper","NoPlayer","DetailHeader","PlayList","PlayListItem","connect","state","playerinfo","player","get","showMini","openPlayer","focused","recomend","banner","personal","dispatch","openMusic","item","songList","info","name","singer","ar","alname","al","pic","picUrl","id","list","map","action","actionsCreatorsPlayer","getSrc","action2","setCurrentPlayer","action3","setPlaylist","musicRef","useRef","useState","setSongList","playlist","useEffect","getstate","location","localStorage","getItem","setItem","getPlaylistDetail","then","res","tracks","CSSTransition","timeout","className","src","coverImgUrl","alt","creator","avatarUrl","nickname","index","key","e","console","log","current","getPositon","nativeEvent","clientX","clientY","openMusicWrap"],"mappings":"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","file":"static/js/6.bea15f7f.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const GoWraper = styled.div`\r\n  height: 46px;\r\n  line-height: 46px;\r\n  width: 100%;\r\n  padding: 0 20px;\r\n  color: #fff;\r\n  background: green;\r\n  .anticon{\r\n    font-size: 26px;\r\n  }\r\n`;","import React from 'react';\r\nimport { \r\n  GoWraper,\r\n} from './style';\r\nimport {\r\n  ArrowLeftOutlined\r\n} from '@ant-design/icons';\r\nfunction GoBack (props){\r\n  let { title, Backfn }  = props;\r\n  return (\r\n    <GoWraper>\r\n      <ArrowLeftOutlined onClick={Backfn}/>\r\n      <div>\r\n        {title}\r\n      </div>\r\n    </GoWraper>\r\n  ); \r\n};\r\n\r\nGoBack.defaultProps = {\r\n  Backfn: () => {\r\n    window.history.back()\r\n  }\r\n}\r\nexport default GoBack;","// This icon file is generated automatically.\nvar ArrowLeftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 000 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"arrow-left\", \"theme\": \"outlined\" };\nexport default ArrowLeftOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ArrowLeftOutlinedSvg from \"@ant-design/icons-svg/es/asn/ArrowLeftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ArrowLeftOutlined = function ArrowLeftOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: ArrowLeftOutlinedSvg\n  }));\n};\n\nArrowLeftOutlined.displayName = 'ArrowLeftOutlined';\nexport default React.forwardRef(ArrowLeftOutlined);","import styled from 'styled-components'\r\n\r\nexport const Wraper = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`;\r\nexport const NoPlayer = styled.div`\r\n  height: 100px;\r\n  width: 100%;\r\n  background: #fff;\r\n`;\r\n\r\nexport const DetailHeader = styled.div`\r\n  height: 180px;\r\n  width: 100%;\r\n  background: green;\r\n  box-sizing: border-box;\r\n  padding: 20px;\r\n  .img-wrap{\r\n    height: 120px;\r\n    width: 120px;\r\n    float: left;\r\n    img{\r\n      height: 120px;\r\n      width: 120px;\r\n    }\r\n  }\r\n  .right{\r\n    width: 170px;\r\n    float: left;\r\n    margin-left: 18px;\r\n    .title{\r\n      font-size: 18px;\r\n      color: #fff;\r\n      overflow:hidden; \r\n      text-overflow:ellipsis;\r\n      display:-webkit-box; \r\n      -webkit-box-orient:vertical;\r\n      -webkit-line-clamp:3; \r\n      height: 80px;\r\n    }\r\n    .author{\r\n      padding-top: 15px;\r\n      img{\r\n        height: 18px;\r\n        width: 18px;\r\n      }\r\n      span{\r\n        margin-left: 10px;\r\n        color: #efefef;\r\n        font-size: 14px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PlayList = styled.div`\r\n  height: 300px;\r\n  flex: 1;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const PlayListItem = styled.div`\r\n  height: auto;\r\n  width: 100%;\r\n  height: 70px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  cursor: pointer;\r\n  .num{\r\n    width: 60px;\r\n    text-align: center;\r\n    color: #999;\r\n    font-size: 24px;\r\n  }\r\n  .right{\r\n    flex: 1;\r\n    border-bottom: 1px solid #e4e4e4;\r\n    .title{\r\n      color: #666;\r\n      font-size: 16px;\r\n      font-weight: 600;\r\n      line-height: 25px;\r\n    }\r\n    .discribe{\r\n      font-size: 12px;\r\n      color: #999;\r\n      line-height: 28px;\r\n    }\r\n  }\r\n`;","import React, { useState, useEffect, useRef} from 'react';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\nimport { actionsCreators as actionsCreatorsPlayer } from '@/views/player/store'\r\n// import { getSongUrl } from '@/utils'\r\n\r\n// import { Carousel } from 'antd';\r\n// 图标\r\nimport { getPlaylistDetail } from '@/api'\r\n\r\nimport { \r\n  Wraper,\r\n  PlayList,\r\n  DetailHeader,\r\n  PlayListItem,\r\n  NoPlayer\r\n} from './style';\r\n\r\nimport GoBack from '@/common/goBack/index'\r\nimport Scroll from '@/common/scroll'\r\nimport MusicStart from '@/common/musicStart'\r\n\r\nfunction Header (props){\r\n\r\n  let { openMusic, openPlayer} = props\r\n  let { showMini, playerinfo } = props\r\n  const musicRef = useRef()\r\n  const [songList, setSongList] = useState([]);\r\n  const [playlist, setPlaylist] = useState({});\r\n\r\n  useEffect(() => {\r\n    let getstate = props.history.location.state || localStorage.getItem('state-id')\r\n    if (!getstate) return\r\n    localStorage.setItem('state-id', props.history.location.state)\r\n    getPlaylistDetail({id: (getstate && getstate.id) || '5007828838'}).then(res => {\r\n      setSongList((res.playlist && res.playlist.tracks) || []);\r\n      setPlaylist(res.playlist);\r\n    })\r\n  },[props.history])\r\n\r\n\r\n  const openMusicWrap = (e, item, songList) => {\r\n    if (item.id == playerinfo.id) return\r\n    console.log(e)\r\n    openMusic(item, songList)\r\n    musicRef.current.getPositon(e.nativeEvent.clientX, e.nativeEvent.clientY, showMini)\r\n  };\r\n\r\n  return (\r\n    <CSSTransition timeout={1000}>\r\n      <Wraper>\r\n        <GoBack></GoBack>\r\n        <DetailHeader>\r\n          <div className=\"img-wrap\">\r\n             <img src={playlist.coverImgUrl && playlist.coverImgUrl + '?param=200x200'} alt=\"\"/>\r\n          </div>\r\n          <div className=\"right\">\r\n            <div className=\"title\">{playlist.name}</div>\r\n            <div className=\"author\">\r\n              <img src={playlist.creator && playlist.creator.avatarUrl + '?param=100x100' } alt=\"\"/>\r\n              <span className=\"auth\">{playlist.creator && playlist.creator.nickname}</span>\r\n            </div>\r\n          </div>\r\n        </DetailHeader>\r\n        <PlayList>\r\n            <Scroll>\r\n              <div>\r\n                {\r\n                  songList.map( (item, index) => {\r\n                    return (\r\n                      <PlayListItem key={index} onClick={(e)=> {openMusicWrap(e, item, songList)}}>\r\n                        <div className=\"num\">{index + 1}</div>\r\n                        <div className=\"right\">\r\n                          <div className=\"title\">{item.name}</div>\r\n                          <div className=\"discribe\">{item.ar && item.ar[0].name} {item.al && item.al.name}</div>\r\n                        </div>\r\n                      </PlayListItem>\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n            </Scroll>\r\n        </PlayList>\r\n        {openPlayer ? <NoPlayer></NoPlayer> : null }\r\n        <MusicStart ref={musicRef}></MusicStart>\r\n      </Wraper>\r\n    </CSSTransition>\r\n  ); \r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    playerinfo: state.player.get('playerinfo'),\r\n    showMini: state.player.get('showMini'),\r\n    openPlayer: state.player.get('openPlayer'),\r\n    focused: state.recomend.get('focused'),\r\n    banner: state.recomend.get('banner'),\r\n    personal: state.recomend.get('personal')\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    openMusic(item, songList) {\r\n      let info = {\r\n        title: item.name,\r\n        singer: item.ar && item.ar[0].name,\r\n        alname: item.al && item.al.name,\r\n        pic: item.al && item.al.picUrl,\r\n        id: item.id\r\n      }\r\n      let list = songList.map(item => {\r\n        return {\r\n          title: item.name,\r\n          singer: item.ar && item.ar[0].name,\r\n          alname: item.al && item.al.name,\r\n          pic: item.al && item.al.picUrl,\r\n          id: item.id\r\n        }\r\n      })\r\n      const action = actionsCreatorsPlayer.getSrc(item.id)\r\n      const action2 = actionsCreatorsPlayer.setCurrentPlayer(info)\r\n      const action3 = actionsCreatorsPlayer.setPlaylist(list)\r\n      dispatch(action)\r\n      dispatch(action2)\r\n      dispatch(action3)\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);"],"sourceRoot":""}